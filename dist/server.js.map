{"version":3,"sources":["webpack:///webpack/bootstrap?7f80","webpack:///external \"express-msteams-host\"?e438","webpack:///external \"botbuilder\"?fa14","webpack:///./src/app/acPrototypeBot/AcPrototypeBot.ts?5403","webpack:///./src/app/server.ts?53c8","webpack:///external \"express\"?22fe","webpack:///external \"http\"?8d19","webpack:///external \"path\"?74bb","webpack:///external \"morgan\"?3206","webpack:///external \"debug\"?b2c7","[]","webpack:///./src/app/acPrototypeBot/dialogs/interviewCandidates.ts?fa00","webpack:///external \"dotenv\"?e70f","webpack:///./src/app/TeamsAppsComponents.ts?b0db"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","AcPrototypeBot","ActivityHandler","memoryStorage","conversationState","super","loggedInMemberOIDs","Map","this","onInvokeActivity","context","ctx","responseBody","secondaryTabResponse","tab","type","cards","card","CardFactory","adaptiveCard","content","activity","status","body","PreventIframe","log","debug","config","express","Express","port","process","env","PORT","adapter","BotFrameworkAdapter","appId","MICROSOFT_APP_ID","appPassword","MICROSOFT_APP_PASSWORD","onTurnError","error","console","sendTraceActivity","sendActivity","delete","MemoryStorage","ConversationState","bot","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","engine","renderFile","set","path","join","__dirname","morgan","post","processActivity","run","static","authResponse","state","Math","random","write","idToken","id_token","accessToken","access_token","tokenType","token_type","expiresIn","expires_in","scope","render","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen","InterviewCandidatesCard","nonce"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"express-msteams-host\");","module.exports = require(\"botbuilder\");","import { PreventIframe } from \"express-msteams-host\";\nimport {\n  CardFactory,\n  TurnContext,\n  MemoryStorage,\n  ConversationState,\n  InvokeResponse,\n  ActivityHandler,\n} from \"botbuilder\";\nimport InterviewCandidatesCard from \"./dialogs/interviewCandidates\";\n\n@PreventIframe(\"/acPrototypeBot/acProtoBotTab.html\")\nexport class AcPrototypeBot extends ActivityHandler {\n  private readonly conversationState: ConversationState;\n  private loggedInMemberOIDs: Map<string, object> = new Map();\n  /**\n   * The constructor\n   * @param conversationState\n   */\n  public constructor(\n    memoryStorage: MemoryStorage,\n    conversationState: ConversationState\n  ) {\n    super();\n    this.conversationState = conversationState;\n\n    // Set up the Activity processing\n    this.onInvokeActivity = async (\n      context: TurnContext\n    ): Promise<InvokeResponse> => {\n      const ctx: any = context;      \n      // const managerCard = CardFactory.adaptiveCard(\n      //   ManagerDashboardCard(profile)\n      // );\n      const interviewCard = CardFactory.adaptiveCard(InterviewCandidatesCard);\n      let responseBody: any;\n\n      const secondaryTabResponse: any = {\n        tab: {\n          type: \"continue\",\n          value: {\n            cards: [\n              // { card: welcomeCard.content },\n              { card: interviewCard.content },\n              // { card: videoPlayerCard.content },\n            ],\n          },\n        },\n      };\n\n      switch (ctx.activity.name) {\n        case \"tab/submit\":\n          break;\n        case \"tab/fetch\":\n        default:\n          responseBody = secondaryTabResponse;\n          break;\n      }\n      return { status: 200, body: responseBody };\n    };\n  }\n}\n","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport {\n  BotFrameworkAdapter,\n  ConversationState,\n  MemoryStorage,\n} from \"botbuilder\";\nimport * as debug from \"debug\";\nimport { renderFile } from \"ejs\";\nimport { AcPrototypeBot } from \"./acPrototypeBot/AcPrototypeBot\";\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(`Initializing Microsoft Teams Express hosted App...`);\n\n// Initialize dotenv, to use .env file settings if existing\n// tslint:disable-next-line:no-var-requires\nrequire(\"dotenv\").config();\n\n// The import of components has to be done AFTER the dotenv config\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\nconst adapter = new BotFrameworkAdapter({\n  appId: process.env.MICROSOFT_APP_ID,\n  appPassword: process.env.MICROSOFT_APP_PASSWORD,\n});\n\n// Catch-all for errors.\nadapter.onTurnError = async (context, error) => {\n  // This check writes out errors to console log .vs. app insights.\n  // NOTE: In production environment, you should consider logging this to Azure\n  //       application insights. See https://aka.ms/bottelemetry for telemetry\n  //       configuration instructions.\n  console.error(`\\n [onTurnError] unhandled error: ${error}`);\n\n  // Send a trace activity, which will be displayed in Bot Framework Emulator\n  await context.sendTraceActivity(\n    \"OnTurnError Trace\",\n    `${error}`,\n    \"https://www.botframework.com/schemas/error\",\n    \"TurnError\"\n  );\n\n  // Send a message to the user\n  await context.sendActivity(\"The bot encountered an error or bug.\");\n  await context.sendActivity(\n    \"To continue to run this bot, please fix the bot source code.\"\n  );\n  // Clear out state\n  await conversationState.delete(context);\n};\n\n// Define a state store for your bot. See https://aka.ms/about-bot-state to learn more about using MemoryStorage.\n// A bot requires a state store to persist the dialog and user state between messages.\n\n// For local development, in-memory storage is used.\n// CAUTION: The Memory Storage used here is for local bot debugging only. When the bot\n// is restarted, anything stored in memory will be gone.\nconst memoryStorage = new MemoryStorage();\nconst conversationState = new ConversationState(memoryStorage);\n\nconst bot = new AcPrototypeBot(memoryStorage, conversationState);\n\n// Inject the raw request body onto the request object\nexpress.use(\n  Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n      (req as any).rawBody = buf.toString();\n    },\n  })\n);\nexpress.use(Express.urlencoded({ extended: true }));\n\nexpress.engine(\"html\", renderFile);\nexpress.set(\"view engine\", \"ejs\");\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Listen for incoming requests.\nexpress.post(\"/api/messages\", (req, res) => {\n  adapter.processActivity(req, res, async (context) => {\n    await bot.run(context);\n  });\n});\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\nexpress.post(\"/acPrototypeTab/redirect.html\", (req, res) => {\n  const authResponse = req.body;\n  const state = Math.random().toString(); // _guid() is a helper function in the sample\n  memoryStorage.write({\n    [state]: {\n      idToken: authResponse.id_token,\n      accessToken: authResponse.access_token,\n      tokenType: authResponse.token_type,\n      expiresIn: authResponse.expires_in,\n      scope: authResponse.scope,\n    },\n  });\n  res.render(path.join(__dirname, \"web/acPrototypeTab/redirect.ejs\"), {\n    state,\n    error: authResponse.error,\n  });\n});\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(\n  MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents,\n  })\n);\n\n// Set default web page\nexpress.use(\n  \"/\",\n  Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\",\n  })\n);\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n  log(`Server running on ${port}`);\n});\n","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","module.exports = require(\"morgan\");","module.exports = require(\"debug\");","module.exports = require(\"ejs\");","const InterviewCandidatesCard = require(\"./interview-candidates.json\");\n\nexport default InterviewCandidatesCard;\n","module.exports = require(\"dotenv\");","// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the acPrototypeBot bot\nexport * from \"./acPrototypeBot/AcPrototypeBot\";\n"],"sourceRoot":""}